{"is_source_file": true, "format": "TypeScript", "description": "This file defines a singleton pattern for creating and sharing a single instance of QueryClient across the application, encapsulating the creation and access to the QueryClient object.", "external_files": ["@tanstack/react-query"], "external_methods": [], "published": ["getQueryClient"], "classes": [], "methods": [{"name": "getQueryClient", "description": "Returns a shared singleton instance of QueryClient, creating it if it does not already exist."}], "calls": ["new QueryClient"], "search-terms": ["QueryClient singleton", "React Query client", "queryClient instance", "shared QueryClient", "lazy initialization"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "getQueryClient", "path": "/home/kavia/workspace/code-generation/universal-application-suite-219-83/frontend_app/ai-cloud-cost-optimizer/lib/queryClient.ts", "pattern": "/^export const getQueryClient = (() => {$/", "language": "TypeScript", "kind": "constant"}], "hash": "87f1c3cab3186850d54a7a02e581ada8", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/ai-cloud-cost-optimizer/lib/queryClient.ts", "revision_history": [{"47": ""}]}